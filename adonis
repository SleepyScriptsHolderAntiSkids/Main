    Solara = getexecutorname() == "Solara";
 if not Solara then
        do -- // Adonis Bypass
            LPH_NO_VIRTUALIZE(function()
                local DTC;
                for Index, Value in next, getgc(true) do
                    if type(Value) == "table" then
                        local Detected = rawget(Value, "Detected");
                        local Kill = rawget(Value, "Kill");
                
                        if type(Detected) == "function" and not DTC then
                            DTC = Detected
                
                            hookfunction(Detected, function(...)
                                return true
                            end);
                        end;
                
                        if rawget(Value, "Variables") and rawget(Value, "Process") and typeof(Kill) == "function" then          
                            hookfunction(Kill, function(...)

                            end)
                        end;
                    end;
                end;
                
                local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
                    local LevelOrFunc, Info = ...
                    if DTC and LevelOrFunc == DTC then
                        return coroutine.yield(coroutine.running())
                    end
                    return Old(...)
                end));

                getgenv().Adonis_Bypassed = true;
            end)();
        end;
    else
        getgenv().Adonis_Bypassed = true;
    end;

    

local DTC;
                for Index, Value in next, getgc(true) do
                    if type(Value) == "table" then
                        local Detected = rawget(Value, "Detected");
                        local Kill = rawget(Value, "Kill");
                
                        if type(Detected) == "function" and not DTC then
                            DTC = Detected
                
                            hookfunction(Detected, function(...)
                                return true
                            end);
                        end;
                
                        if rawget(Value, "Variables") and rawget(Value, "Process") and typeof(Kill) == "function" then          
                            hookfunction(Kill, function(...)

                            end)
                        end;
                    end;
                end;
                
                local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
                    local LevelOrFunc, Info = ...
                    if DTC and LevelOrFunc == DTC then
                        return coroutine.yield(coroutine.running())
                    end
                    return Old(...)
                end));



local GetAdonis = function()
    for i,v in next, getgc(true) do
        if type(v) == "table" then
            local Raw = rawget(v, "Detected")
            if Raw and typeof(Raw) == "function" and getfenv(Raw).script then
                return v
            end
        end
    end
    return nil
end
local Adonis = function()
    if GetAdonis() then
        return GetAdonis()
    end
    return false
end

local AntiAdonis = function()
    local Init = Adonis()
    if Init then
        for _,v in next, Init do
            if type(v) == "function" then
                print(getfenv(v).script.name, debug.info(v, "n"))
                hookfunction(v, coroutine.yield())
            end
        end
    end
    return {{{{{{}}}}}}
end

AntiAdonis()

for k,v in pairs(getgc(true)) do
    if pcall(function() return rawget(v,"indexInstance") end) and type(rawget(v,"indexInstance")) == "table" and  (rawget(v,"indexInstance"))[1] == "kick" then
     setreadonly(v,false)
        v.tvk = {"kick",function() return game.Workspace:WaitForChild("Bypaased -_-") end}
    end
end
task.wait(2)
local function isAdonisAC(table)
return rawget(table, "Detected")
and typeof(rawget(table, "Detected")) == "function"
and rawget(table, "RLocked")
end
for _, v in next, getgc(true) do
    if typeof(v) == "table" and isAdonisAC(v) then
        for i, v in next, v do
            if rawequal(i, "Detected") then
                local old
                old = hookfunction(v, function(action, info, nocrash)
                    if rawequal(action, "_") and rawequal(info, "_") and rawequal(nocrash, true) then
                        return old(action, info, nocrash)
                    end
                    return task.wait(9e9)
                end)
                break
            end
        end
    end
end
 if getconnections then 
            local err;
            err = game:GetService("ScriptContext").Error
            for i,v in next, getconnections(err) do 
                v:Disable() 
            end
        end

